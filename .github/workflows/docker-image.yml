name: Build And Push Docker Image To ECR

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
     
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: olien-development 
        # IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f src/Postgresql.Mvc/Dockerfile . 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "ECR_REGISTRY=$ECR_REGISTRY/$ECR_REPOSITORY" >> REGISTRY_IMAGE
        echo "IMAGE_TAG=$IMAGE_TAG" >> REGISTRY_IMAGE
    
    # - name: Display $IMAGE_TAG
    #   run: |
    #     source REGISTRY_IMAGE
    #     echo $IMAGE_TAG
    #     echo $ECR_REGISTRY
    
    # - name: helm deploy
    #   uses: koslib/helm-eks-action@master
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
    #   with:
    #     plugins: "https://github.com/jkroepke/helm-secrets" # optional
    #     command: |
    #       source REGISTRY_IMAGE
    #       helm upgrade -i flask-app ./deployment/helm/deploy --wait --atomic --namespace=default --set image.repository=$ECR_REGISTRY --set image.tag=$IMAGE_TAG

    # - name: Deploy
    #   uses: WyriHaximus/github-action-helm3@v2
    #   with:
    #     exec: |
    #       source REGISTRY_IMAGE
    #       helm upgrade -i flask-app ./deployment/helm/deploy --wait --atomic --namespace=default --set image.repository=$ECR_REGISTRY --set image.tag=$IMAGE_TAG
    #     kubeconfig: '${{ secrets.KUBECONFIG }}'
